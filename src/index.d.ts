type Enumerate<N extends number, Acc extends number[] = []> = Acc['length'] extends N ? Acc[number] : Enumerate<N, [...Acc, Acc['length']]>;
type IntRange<F extends number, T extends number> = Exclude<Enumerate<T>, Enumerate<F>>;
type allowedDateFormat = 'DMY' | 'DYM' | 'MDY' | 'MYD' | 'YDM' | 'YMD';
type allowedTimeFormat = 'HMS' | 'HSM' | 'MHS' | 'MSH' | 'SHM' | 'SMH';
interface shkDateI {
    year: number;
    month: IntRange<1, 13>;
    day: IntRange<1, 32>;
    hours: IntRange<0, 24>;
    minutes: IntRange<0, 60>;
    seconds: IntRange<0, 60>;
}
declare class ShkDate {
    private _date;
    private _dateFormat;
    private _timeFormat;
    private _dateSeparator;
    private _timeSeparator;
    private _fillZeros;
    private _checkIrregular;
    private _jsYear;
    private _jsMonth;
    private _jsDay;
    private _jsHour;
    private _jsMinute;
    private _jsSecond;
    private _dicMonth;
    constructor(date?: string);
    private updateJSDate;
    get dateFormat(): allowedDateFormat;
    getDateFormat(): allowedDateFormat;
    set dateFormat(dateFormat: allowedDateFormat);
    setDateFormat(dateFormat: allowedDateFormat): void;
    get timeFormat(): allowedTimeFormat;
    getTimeFormat(): allowedTimeFormat;
    set timeFormat(timeFormat: allowedTimeFormat);
    setTimeFormat(timeFormat: allowedTimeFormat): void;
    get dateSeparator(): string;
    getDateSeparator(): string;
    set dateSeparator(dateSeparator: string);
    setDateSeparator(dateSeparator: string): void;
    get timeSeparator(): string;
    getTimeSeparator(): string;
    set timeSeparator(timeSeparator: string);
    setTimeSeparator(timeSeparator: string): void;
    get fillZeros(): boolean;
    getFillZeros(): boolean;
    set fillZeros(fillZeros: boolean);
    setFillZeros(fillZeros: boolean): void;
    get year(): number | string;
    getYear(): number | string;
    set year(year: number | string);
    setYear(year: number | string): void;
    get month(): IntRange<1, 13> | string;
    getMonth(): IntRange<1, 13> | string;
    set month(month: IntRange<1, 13> | string);
    setMonth(month: IntRange<1, 13> | string): void;
    get day(): IntRange<1, 32> | string;
    getDay(): IntRange<1, 32> | string;
    set day(day: IntRange<1, 32> | string);
    setDay(day: IntRange<1, 32> | string): void;
    get hours(): IntRange<0, 24> | string;
    getHours(): IntRange<0, 24> | string;
    set hours(hours: IntRange<0, 24> | string);
    setHours(hours: IntRange<0, 24> | string): void;
    get minutes(): IntRange<0, 60> | string;
    getMinutes(): IntRange<0, 60> | string;
    set minutes(minutes: IntRange<0, 60> | string);
    setMinutes(minutes: IntRange<0, 60> | string): void;
    get seconds(): IntRange<0, 60> | string;
    getSeconds(): IntRange<0, 60> | string;
    set seconds(seconds: IntRange<0, 60> | string);
    setSeconds(seconds: IntRange<0, 60> | string): void;
    get date(): string;
    getDate(): string;
    set date(date: string);
    setDate(date: string): void;
    get time(): string;
    getTime(): string;
    set time(time: string);
    setTime(time: string): void;
    get dateTime(): string;
    getDateTime(): string;
    set dateTime(dateTime: string);
    setDateTime(dateTime: string): void;
    get extMonth(): string;
    getExtMonth(): string;
}
